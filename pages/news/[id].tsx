// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import { GetStaticPaths, GetStaticProps } from "next";
import { useRouter } from "next/router";
import * as React from "react";
import useSWR from "swr";
import Page from "../../components/Page";
import { PlasmicNewsid } from "../../components/plasmic/shinkan_next/PlasmicNewsid";
import Plasmic_404 from "../../components/plasmic/shinkan_next/Plasmic_404";
import { fallback } from "../../utils/config";
import { buildPathWithWPQuery, wpFetch } from "../../utils/wpFetch";
export const getStaticPaths: GetStaticPaths = async () => {
  const pages = await wpFetch(
    buildPathWithWPQuery("/v2/posts", { tags: /*news=2*/ "2" })
  );

  const paths = pages.map((it: any) => ({
    params: {
      id: it.id.toString(),
    },
  }));
  return {
    paths,
    fallback: fallback,
  };
};
export const getStaticProps: GetStaticProps = async ({ params }) => {
  const pageId = params?.id;
  const post = await wpFetch(`/v2/posts/${pageId}`);

  return {
    props: {
      initialData: post,
    } as Props,
  };
};
type Props = {
  initialData: any;
};
function Newsid({ initialData }: Props) {
  const router = useRouter();
  if (router.isFallback) {
    console.log("フォールバックにつきフェッチします");
  }
  const pageId = router.query.id;
  const { data, error } = useSWR(`/v2/posts/${pageId}`, wpFetch, {
    initialData,
  });
  if (data?.data?.status === 404) {
    return <Plasmic_404 />;
  }
  if (error) {
    console.error("page error", error);
    return (
      <Page>
        <>エラー</>
      </Page>
    );
  }
  if (!data?.title) {
    return (
      <Page>
        <>読み込み中</>
      </Page>
    );
  }
  return (
    <PlasmicNewsid title={data.title.rendered} date={data.date}>
      <div
        dangerouslySetInnerHTML={{
          __html: data.content.rendered, // WordPressが無害化してくれると期待しているので危ないことしても許されると思っています。
        }}
      />
    </PlasmicNewsid>
  );
}

export default Newsid;
