// This is a skeleton starter React page generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import Link from "next/link";
import React, { useEffect, useState } from "react";
import useSWR from "swr";
import CategoryRadio from "../components/CategoryRadio";
import EventListItem from "../components/EventListItem";
import OrgCard from "../components/OrgCard";
import { PlasmicHome } from "../components/plasmic/shinkan_next/PlasmicHome";
import { buildPathWithWPQuery, wpFetch } from "../utils/wpFetch";

type CatUnion = "all" | "sports" | "art" | "culture" | "other";
function Homepage() {
  // Use PlasmicHomepage to render this component as it was
  // designed in Plasmic, by activating the appropriate variants,
  // attaching the appropriate event handlers, etc.  You
  // can also install whatever React hooks you need here to manage state or
  // fetch data.
  //
  // Props you can pass into PlasmicHomepage are:
  // 1. Variants you want to activate,
  // 2. Contents for slots you want to fill,
  // 3. Overrides for any named node in the component to attach behavior and data,
  // 4. Props to set on the root node.
  //
  // By default, PlasmicHomepage is wrapped by your project's global
  // variant context providers. These wrappers may be moved to
  // Next.js Custom App component
  // (https://nextjs.org/docs/advanced-features/custom-app).
  const [category, selectCategory] = useState<CatUnion>("all");
  const [events, setEvents] = useState<
    {
      eventTitle: string;
      dateTime: string;
      orgId: string;
    }[]
  >([]);
  const [orgs, setOrgs] = useState<
    {
      src: string;
      description: string;
      name: string;
      activity: "sports" | "art" | "culture" | "other";
      orgType: "ippan" | "kagai" | "other";
      orgId: number;
    }[]
  >([]);
  useEffect(() => {
    setEvents([]);
  }, []);
  const { data: newsData } = useSWR(
    buildPathWithWPQuery("/v2/posts", { tags: /*news=2*/ "2" }),
    wpFetch
  );
  const news: { date: string; title: string; newsId: string }[] =
    newsData?.map((n: any) => ({
      date: n.date.replace(/T.*$/, ""), // 汚い？ああそう
      title: n.title.rendered,
      newsId: n.id,
    })) || [];
  useEffect(() => {
    setOrgs([]);
  }, []);

  return (
    <PlasmicHome
      eventList={
        <>
          {events.map((ev) => (
            <EventListItem eventTitle={ev.eventTitle} dateTime={ev.dateTime}>
              <Link href={`/org/${ev.orgId}`}>詳細を表示</Link>
            </EventListItem>
          ))}
        </>
      }
      eventCount={events.length}
      categoryRadio={
        <>
          {["all", "sports", "art", "culture", "other"].map((c) => (
            <CategoryRadio
              variant={c as CatUnion}
              selected={category === c}
              onClick={() => selectCategory(c as CatUnion)}
            />
          ))}
        </>
      }
      orgs={
        <>
          {orgs.map((o) => (
            <OrgCard {...o} />
          ))}
        </>
      }
      news={
        <>
          {news.map((ev) => (
            <EventListItem eventTitle={ev.title} dateTime={ev.date}>
              <Link href={`/news/${ev.newsId}`}>詳細を表示</Link>
            </EventListItem>
          ))}
        </>
      }
    />
  );
}

export default Homepage;
